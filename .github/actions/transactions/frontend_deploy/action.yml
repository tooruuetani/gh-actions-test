name: "Build spa application, then upload static files to S3"
description: |
  以下のタスクを順次実行する。
  * Node.js アプリをビルドして、 S3 にアップロード
  * CloudFront のキャッシュを削除
inputs:
  aws_region:
    description: "The AWS region"
    default: "ap-northeast-1"
  aws_role:
    description: "The AWS role ARN"
    default: ""
  dir_node:
    description: "The directory of Node.js application"
    required: true
  dir_terraform:
    description: "The directory of terraform"
    required: true
  sha:
    description: "The SHA of the commit"
    required: true
  version_node:
    description: "The version of Node.js"
    default: "18"
runs:
  using: composite
  steps:
    - name: Install terraform
      uses: ./.github/actions/commons/terraform_install
      with:
        aws_region: ${{ inputs.aws_region }}
        aws_role: ${{ inputs.aws_role }}
        dir: ${{ inputs.dir_terraform }}
    - name: Get terraform output value
      id: tf
      working-directory: ${{ inputs.dir_terraform }}
      run: |
        JSON=`terraform-bin output -json`
        echo "cloudfront_id=`echo $JSON | jq -r .cloudfront_id.value`" >> $GITHUB_OUTPUT
        echo "cloudfront_bucket=`echo $JSON | jq -r .cloudfront_bucket.value`" >> $GITHUB_OUTPUT
      shell: bash
    - name: Inject version
      working-directory: ${{ inputs.dir_node }}
      run: |
        VERSION_SHA=$VERSION-${{ inputs.sha }}
        echo VITE_VERSION_SHA=$VERSION_SHA>.env
        echo VITE_AWS_REGION=${{ inputs.aws_region }}>>.env
      shell: bash
    - name: Install Node.js
      uses: ./.github/actions/commons/node_install
      with:
        dir: ${{ inputs.dir_node }}
        version: ${{ inputs.version_node }}
    - name: Deploy Node.js application to cloudfront
      uses: ./.github/actions/commons/node_deploy
      with:
        dir: ${{ inputs.dir_node }}
        dir_build_result: ${{ inputs.dir_node }}/dist
        distribution_id: ${{ steps.tf.outputs.cloudfront_id }}
        origin_bucket: ${{ steps.tf.outputs.cloudfront_bucket }}
