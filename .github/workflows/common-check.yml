name: common-check
run-name: Common check codes for "${{ github.head_ref }}@${{ github.event.pull_request.head.sha }}"
on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
env:
  AWS_ROLE_ARN_DEV: arn:aws:iam::082954585471:role/rpf-infrastructure-role-dev
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      service_backend: ${{ steps.filter.outputs.service_backend }}
      service_frontend: ${{ steps.filter.outputs.service_frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            service_backend:
              - 'service/pyproject.toml'
              - 'service/poetry.lock'
              - 'service/backend/src/*.py'
              - 'service/backend/src/**/*.py'
              - 'service/backend/tests/*.py'
              - 'service/backend/tests/**/*.py'
            service_frontend:
              - "service/frontend/package.json"
              - "service/frontend/package-lock.json"
              - "service/frontend/src/*"
              - "service/frontend/tests/*"
              - "service/frontend/public/*"

  test_service_backend:
    needs:
      - changes
    if: ${{ needs.changes.outputs.service_backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: service/backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python and dependencies
        uses: ./.github/actions/commons/python_install
        with:
          dir: service/backend
          version: "3.11"
          version-poetry: "1.8.2"

  test_service_frontend:
    needs:
      - changes
    if: ${{ needs.changes.outputs.service_frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: service/frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js and dependencies
        uses: ./.github/actions/commons/node_install
        with:
          dir: service/frontend
          version: "18"

  check_code:
    needs:
      - test_service_backend
      - test_service_frontend
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Force failure
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: echo "Failed or canceled" && exit 1
      - run: echo "$json"
        env:
          json: ${{ toJSON(needs) }}
