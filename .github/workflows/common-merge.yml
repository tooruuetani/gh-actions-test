name: common-merge
run-name: Common merge codes for "${{ github.head_ref }}@${{ github.event.pull_request.head.sha }}"
on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  AWS_REGION: ap-northeast-1
  AWS_ROLE_ARN_DEV: arn:aws:iam::082954585471:role/test-274-infrastructure-role-dev

jobs:
  changes:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    outputs:
      service_backend: ${{ steps.filter.outputs.service_backend }}
      service_frontend: ${{ steps.filter.outputs.service_frontend }}
      common_terraform_dev: ${{ steps.filter.outputs.terraform_dev }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            service_backend:
              - 'service/pyproject.toml'
              - 'service/poetry.lock'
              - 'service/backend/src/*.py'
              - 'service/backend/src/**/*.py'
              - 'service/backend/tests/*.py'
              - 'service/backend/tests/**/*.py'
            service_frontend:
              - "service/frontend/package.json"
              - "service/frontend/package-lock.json"
              - "service/frontend/src/*"
              - "service/frontend/tests/*"
              - "service/frontend/public/*"
            terraform_dev:
              - "terraform/*.tf"

  common_terraform_apply_dev:
    needs: [changes]
    if: ${{ needs.changes.outputs.common_terraform_dev == 'true' }}
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/transactions/terraform_apply
        with:
          aws_region: "ap-northeast-1"
          aws_role: ${{ env.AWS_ROLE_ARN_DEV }}
          dir: terraform
          need_tfcmt: true
          token: ${{ secrets.GITHUB_TOKEN }}

  service_backend_deploy_dev:
    needs:
      - changes
      - common_terraform_apply_dev
    if: ${{ !failure() }}
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      DIR_LAMBROLL: service/backend/lambroll
      STAGE: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get context
        uses: ./.github/actions/context_to_main
        id: context
      - name: Update lambda function
        uses: ./.github/actions/transactions/lambda_deploy
        with:
          aws_region: ${{ env.AWS_REGION }}
          aws_role: ${{ env.AWS_ROLE_ARN_DEV }}
          dir_docker: "service/backend"
          dir_lambroll: "service/backend/lambroll"
          function_names: "webapp"
          image_sha: ${{ steps.context.outputs.sha }}
          lambroll_alias: "test293"
          lambroll_envfile: "dev.env"
          repository_name: "rpf-account-lambda-feature293"
          tfstate_url: "s3://test-274-terraform-state-dev/infrastructure.tfstate"

  notify_failed:
    needs:
      - changes
      - common_terraform_apply_dev
      - service_backend_deploy_dev
    if: ${{ failure() && !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        env:
          ACTION_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          ACTOR: ${{ github.actor }}
        with:
          script: |
            const { ACTOR } = process.env
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${{ env.ACTOR }} Merge task has failed.\nSee ${{ env.ACTION_URL }}`
            })
